{
  "address": "0xBEC34D2a08962e7cE04f42B619a9B3affBB1950B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x904d8e35c33d83f6a832d102c374fb2fcfe450d64f62d1c915063d4172dc5bd4",
  "receipt": {
    "to": null,
    "from": "0x8c803eC5BdE8c63Efa91ec59FF69d8adfDF35EE4",
    "contractAddress": "0xBEC34D2a08962e7cE04f42B619a9B3affBB1950B",
    "transactionIndex": 6,
    "gasUsed": "827714",
    "logsBloom": "0x
    "blockHash": "0x92eef8dbf2a4ab5718f0be07d9d0544ded1ed6f001ee9a1a1c424a4918881df8",
    "transactionHash": "0x904d8e35c33d83f6a832d102c374fb2fcfe450d64f62d1c915063d4172dc5bd4",
    "logs": [],
    "blockNumber": 10886702,
    "cumulativeGasUsed": "1240393",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "95e96a3ada66db4113e18a5de98efec6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUN_USD = 5 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface priceFeed;\\n\\n    constructor(address priceFeeAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeeAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUN_USD,\\n            \\\"Didn't send enough\\\"\\n        ); // Send atleast 1eth\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // Reset array\\n        funders = new address[](0);\\n\\n        // Send token from contract to another address\\n\\n        // payable(msg.sender).transfer(address(this).balance);// Transfer\\n\\n        // bool sendSuccess = payable(msg.sender).transfer(address(this).balance);//Send\\n        // require(sendSuccess, \\\"Send failed\\\");\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\"); //Call\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n\\n        //require(msg.sender==i_owner, \\\"Sender is not owner\\\");\\n        _; // Run the rest of the code\\n    }\\n\\n    // If someone sends money without the fund function\\n\\n    receive() external payable {\\n        // fires when actual fund function not called\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xfbd674804d291035e01f8e5df22ec10322fd9512b28d04dd6f50a45b8ca7a198\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xa8af706e8ef6f48f2838521c28b6efa67a0ed67160c12bd63deb1e719da56ff7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610efd380380610efd83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610d98610165600039600081816102ab01526105030152610d986000f3fe6080604052600436106100595760003560e01c80632100f479146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761029d565b6040516100949190610700565b60405180910390f35b3480156100a957600080fd5b506100b26102a9565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061077e565b6104e9565b6040516100e89190610700565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b50610110610501565b60405161011d91906107ba565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190610801565b610525565b60405161015a91906107ba565b60405180910390f35b674563918244f400006101a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056490919063ffffffff16565b10156101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d99061088b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029491906108da565b92505081905550565b674563918244f4000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103d957600080828154811061035357610352610930565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103d19061095f565b915050610331565b50600067ffffffffffffffff8111156103f5576103f46109a8565b5b6040519080825280602002602001820160405280156104235781602001602082028036833780820191505090505b5060009080519060200190610439929190610640565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046090610a08565b60006040518083038185875af1925050503d806000811461049d576040519150601f19603f3d011682016040523d82523d6000602084013e6104a2565b606091505b50509050806104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90610a69565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061053557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610570836105a0565b90506000670de0b6b3a764000085836105899190610a89565b6105939190610b12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105e957600080fd5b505afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190610bd0565b5050509150506402540be400816106389190610c4b565b915050919050565b8280548282559060005260206000209081019282156106b9579160200282015b828111156106b85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610660565b5b5090506106c691906106ca565b5090565b5b808211156106e35760008160009055506001016106cb565b5090565b6000819050919050565b6106fa816106e7565b82525050565b600060208201905061071560008301846106f1565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074b82610720565b9050919050565b61075b81610740565b811461076657600080fd5b50565b60008135905061077881610752565b92915050565b6000602082840312156107945761079361071b565b5b60006107a284828501610769565b91505092915050565b6107b481610740565b82525050565b60006020820190506107cf60008301846107ab565b92915050565b6107de816106e7565b81146107e957600080fd5b50565b6000813590506107fb816107d5565b92915050565b6000602082840312156108175761081661071b565b5b6000610825848285016107ec565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061087560128361082e565b91506108808261083f565b602082019050919050565b600060208201905081810360008301526108a481610868565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108e5826106e7565b91506108f0836106e7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610925576109246108ab565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061096a826106e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561099d5761099c6108ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109f26000836109d7565b91506109fd826109e2565b600082019050919050565b6000610a13826109e5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a53600b8361082e565b9150610a5e82610a1d565b602082019050919050565b60006020820190508181036000830152610a8281610a46565b9050919050565b6000610a94826106e7565b9150610a9f836106e7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ad857610ad76108ab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b1d826106e7565b9150610b28836106e7565b925082610b3857610b37610ae3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b6281610b43565b8114610b6d57600080fd5b50565b600081519050610b7f81610b59565b92915050565b6000819050919050565b610b9881610b85565b8114610ba357600080fd5b50565b600081519050610bb581610b8f565b92915050565b600081519050610bca816107d5565b92915050565b600080600080600060a08688031215610bec57610beb61071b565b5b6000610bfa88828901610b70565b9550506020610c0b88828901610ba6565b9450506040610c1c88828901610bbb565b9350506060610c2d88828901610bbb565b9250506080610c3e88828901610b70565b9150509295509295909350565b6000610c5682610b85565b9150610c6183610b85565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ca057610c9f6108ab565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cdd57610cdc6108ab565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d1a57610d196108ab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d5757610d566108ab565b5b82820290509291505056fea2646970667358221220c526eed7e7cd16efa81c84cbe12d3bafeef4954f2629838d406643c0b465ed4264736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80632100f479146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761029d565b6040516100949190610700565b60405180910390f35b3480156100a957600080fd5b506100b26102a9565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061077e565b6104e9565b6040516100e89190610700565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b50610110610501565b60405161011d91906107ba565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190610801565b610525565b60405161015a91906107ba565b60405180910390f35b674563918244f400006101a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056490919063ffffffff16565b10156101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d99061088b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029491906108da565b92505081905550565b674563918244f4000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103d957600080828154811061035357610352610930565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103d19061095f565b915050610331565b50600067ffffffffffffffff8111156103f5576103f46109a8565b5b6040519080825280602002602001820160405280156104235781602001602082028036833780820191505090505b5060009080519060200190610439929190610640565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046090610a08565b60006040518083038185875af1925050503d806000811461049d576040519150601f19603f3d011682016040523d82523d6000602084013e6104a2565b606091505b50509050806104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90610a69565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061053557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610570836105a0565b90506000670de0b6b3a764000085836105899190610a89565b6105939190610b12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105e957600080fd5b505afa1580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190610bd0565b5050509150506402540be400816106389190610c4b565b915050919050565b8280548282559060005260206000209081019282156106b9579160200282015b828111156106b85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610660565b5b5090506106c691906106ca565b5090565b5b808211156106e35760008160009055506001016106cb565b5090565b6000819050919050565b6106fa816106e7565b82525050565b600060208201905061071560008301846106f1565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074b82610720565b9050919050565b61075b81610740565b811461076657600080fd5b50565b60008135905061077881610752565b92915050565b6000602082840312156107945761079361071b565b5b60006107a284828501610769565b91505092915050565b6107b481610740565b82525050565b60006020820190506107cf60008301846107ab565b92915050565b6107de816106e7565b81146107e957600080fd5b50565b6000813590506107fb816107d5565b92915050565b6000602082840312156108175761081661071b565b5b6000610825848285016107ec565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b600061087560128361082e565b91506108808261083f565b602082019050919050565b600060208201905081810360008301526108a481610868565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108e5826106e7565b91506108f0836106e7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610925576109246108ab565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061096a826106e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561099d5761099c6108ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109f26000836109d7565b91506109fd826109e2565b600082019050919050565b6000610a13826109e5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a53600b8361082e565b9150610a5e82610a1d565b602082019050919050565b60006020820190508181036000830152610a8281610a46565b9050919050565b6000610a94826106e7565b9150610a9f836106e7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ad857610ad76108ab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b1d826106e7565b9150610b28836106e7565b925082610b3857610b37610ae3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b6281610b43565b8114610b6d57600080fd5b50565b600081519050610b7f81610b59565b92915050565b6000819050919050565b610b9881610b85565b8114610ba357600080fd5b50565b600081519050610bb581610b8f565b92915050565b600081519050610bca816107d5565b92915050565b600080600080600060a08688031215610bec57610beb61071b565b5b6000610bfa88828901610b70565b9550506020610c0b88828901610ba6565b9450506040610c1c88828901610bbb565b9350506060610c2d88828901610bbb565b9250506080610c3e88828901610b70565b9150509295509295909350565b6000610c5682610b85565b9150610c6183610b85565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ca057610c9f6108ab565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cdd57610cdc6108ab565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d1a57610d196108ab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d5757610d566108ab565b5b82820290509291505056fea2646970667358221220c526eed7e7cd16efa81c84cbe12d3bafeef4954f2629838d406643c0b465ed4264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}